{"version":3,"sources":["components/InputField/InputField.component.jsx","services/phonebook.js","components/Phonebook/Phonebook.component.jsx","components/Form/Form.component.jsx","components/Notification/Notification.component.jsx","App.js","index.js"],"names":["InputField","name","handleChange","newName","style","textTransform","onChange","value","apiURL","deletePhone","id","a","axios","delete","response","data","createPhone","phone","post","updatePhone","patch","Phonebook","persons","setPersons","setMessage","useState","search","setSearch","className","event","target","filter","person","toLowerCase","includes","map","number","onClick","window","confirm","then","text","isBad","setInterval","prevState","catch","isEmpty","trim","valueExists","field","d","indexOf","Form","newPhone","setNewPhone","preventDefault","alert","res","error","newPerson","e","type","Notification","message","App","useEffect","get","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16ab7b6f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './InputField.styles.css';\r\n\r\nconst InputField = ({ name, handleChange, newName}) => (\r\n    <div style={{textTransform: 'uppercase'}}>\r\n    <span>{name}:</span> <input name={name} onChange={handleChange} value={newName} />\r\n    </div>\r\n);\r\n\r\nexport default InputField;","import axios from 'axios';\r\nconst apiURL = '/api/persons';\r\n\r\n/**\r\n * Gets all elements from the server.\r\n * @returns {JSON} Returns all elements saved on the server.\r\n */\r\nexport const getPhonebook = async() =>{\r\n    const response = await axios.get(apiURL);\r\n    return response.data;\r\n}\r\n/**\r\n * Deletes the entry by a given ID. Makes an HTTP POST request to the server.\r\n * @param {String} id Object's ID to be deleted.\r\n * @returns {JSON} Data response from the HTTP request.\r\n */\r\nexport const deletePhone = async(id)=>{\r\n    const response = await axios.delete(`${apiURL}/${id}`);\r\n    return response.data\r\n}\r\n/**\r\n * Creates a entry from given data to the server.\r\n * @param {JSON} phone Data to save on the server.\r\n * @returns {JSON} Data of the response from the HTTP request.\r\n */\r\nexport const createPhone = async (phone) =>{\r\n    \r\n    const response = await axios.post(apiURL, phone);\r\n    return response.data    \r\n    \r\n    \r\n}\r\n\r\n/**\r\n * Updates an element on the server by the given ID\r\n * making an HTTP PATCH request.\r\n * @param {JSON} data Data that is going to be sent to server.\r\n * @param {String} id The ID that is identifying the object to PATCH on the server.\r\n * @returns {JSON} The data of the response from the HTTP request.\r\n*/\r\nexport const updatePhone = async ( data, id ) =>{\r\n    const response = await axios.patch(`${apiURL}/${id}`, data);\r\n    return response.data\r\n}\r\n","import React, { useState } from 'react';\r\nimport './Phonebook.styles.css'\r\nimport InputField from '../InputField/InputField.component';\r\nimport { deletePhone } from '../../services/phonebook';\r\n\r\nconst Phonebook = ({ persons, setPersons, setMessage }) => {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const handleChange = (event) =>{\r\n        setSearch(event.target.value);\r\n    };\r\n\r\n    const handleDelete = (id) =>{\r\n        if(window.confirm('Delete number?')){\r\n            deletePhone(id)\r\n                .then(() =>{\r\n                setMessage({\r\n                    text: 'Phone has been deleted!',\r\n                    isBad: false\r\n                })\r\n                setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n            })\r\n            .catch(() =>{\r\n                setMessage({\r\n                    text: 'An error happened! Try again later.',\r\n                    isBad: true\r\n                });\r\n                setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n            });\r\n            setPersons(prevState=>{\r\n                return prevState.filter(person=>person.id!==id);\r\n            });\r\n        }\r\n    }\r\n\r\n    return(\r\n    <div className=\"phonebook\">\r\n        <h2>Numbers</h2>\r\n        <InputField\r\n            name={'search'}\r\n            handleChange={handleChange}\r\n            newName={search}\r\n        />\r\n        {\r\n        persons\r\n        .filter(person=>person.name.toLowerCase().includes(search.toLowerCase()))\r\n        .map((person) =>(\r\n            <p key={person.id}>\r\n                {person.name} : {person.number} <span onClick={()=>{handleDelete(person.id)}} id=\"delete\">Delete</span>\r\n            </p>\r\n        ))\r\n        }\r\n    </div>\r\n);};\r\n\r\nexport default Phonebook;","// MODULES\r\nimport React, { useState } from 'react';\r\nimport { createPhone, updatePhone } from '../../services/phonebook';\r\n// STYLES\r\nimport './Form.styles.css'\r\n// COMPONENTS\r\nimport InputField from '../InputField/InputField.component';\r\n\r\nconst isEmpty = (data) => {\r\n    if (!data.trim() || !data){\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst valueExists = (value, field, data) => {\r\n    if (data.map(d=>d[field]).indexOf(value[field])!==-1){\r\n        const id = data.filter(d => d[field] === value[field] )[0].id;\r\n        return id;\r\n    }\r\n    return false;\r\n};\r\n\r\nconst Form = ({ persons, setPersons, setMessage }) => {\r\n    const [newPhone, setNewPhone] = useState({\r\n        name: '',\r\n        number: ''\r\n    });\r\n    const handleChange = (event) =>{\r\n        setNewPhone({\r\n            ...newPhone,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleClick = (event) =>{\r\n        event.preventDefault();\r\n        if (isEmpty(newPhone.name)||isEmpty(newPhone.number)){\r\n            alert('Field is required');\r\n            return;\r\n        }\r\n        // UPDATE PHONE\r\n        if (valueExists(newPhone, 'name', persons)){\r\n            if (window.confirm(`Want to overwrite ${newPhone.name}?`)){\r\n                const id = valueExists(newPhone, 'name', persons);\r\n                const newPerson = updatePhone({ number: newPhone.number } ,id);\r\n                newPerson.then(res => {\r\n                    setMessage({\r\n                        text: `${res.name} has been updated!`,\r\n                        isBad: false\r\n                    });\r\n                    setPersons(prevState=>{\r\n                        return prevState.map(person => person.id===id ? res : person);\r\n                    });\r\n                    setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n                }).catch((error) =>{\r\n                    setMessage({\r\n                        text: error.response.data.error,\r\n                        isBad: true\r\n                    });\r\n                    setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n                });                \r\n            }\r\n            setNewPhone((prevState)=>{\r\n                return{\r\n                    ...prevState,\r\n                    name:'',\r\n                    number: ''\r\n                }\r\n            });\r\n            return; \r\n        }\r\n        const newPerson = {\r\n            ...newPhone\r\n        };\r\n        //CREATE NEW PHONE\r\n        createPhone(newPerson).then(res=>{\r\n            setPersons(prevState=>[...prevState, res]);\r\n            setNewPhone((prevState)=>{\r\n                return{\r\n                    ...prevState,\r\n                    name:'',\r\n                    number: ''\r\n                }\r\n            });\r\n            setMessage({\r\n                text: `${res.name} has been created!`,\r\n                isBad: false\r\n            });\r\n            setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n        })\r\n        .catch((e) =>{\r\n            setMessage({\r\n                text: e.response.data.error,\r\n                isBad: true\r\n            });\r\n            setInterval(() => setMessage(prevState=>({...prevState, text:''})), 5000);\r\n        });\r\n        \r\n    }\r\n\r\n    return(\r\n    <div className=\"form\">\r\n      <h1>Phonebook</h1>\r\n        <form>\r\n          <div className=\"inputField\">\r\n            <InputField\r\n            handleChange={handleChange}\r\n            newName={newPhone.name}\r\n            name={'name'}\r\n            />\r\n            <InputField\r\n                handleChange={handleChange}\r\n                newName={newPhone.number}\r\n                name={'number'}\r\n            />\r\n          </div>\r\n          <div className=\"btn\">\r\n            <button onClick={handleClick} type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    </div>\r\n);};\r\nexport default Form;","import React from 'react';\r\nimport './Notification.styles.css';\r\n\r\nconst Notification = ({ message}) => (\r\n    <div className={`message ${message.isBad ? 'bad' : 'good'}`}>\r\n        <h2>{message.text}</h2>\r\n    </div>\r\n);\r\n\r\nexport default Notification;\r\n","// MODULES\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n//STYLES\r\nimport './App.css';\r\n//COMPONENTS\r\nimport Phonebook from './components/Phonebook/Phonebook.component';\r\nimport Form from './components/Form/Form.component';\r\nimport Notification from './components/Notification/Notification.component';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]);\r\n  const [ message, setMessage] = useState({\r\n    text: '',\r\n    isBad: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/persons\")\r\n      .then(res =>{\r\n        setPersons(res.data)\r\n      })\r\n      .catch(console.error);\r\n  },\r\n    []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {message.text && <Notification \r\n        message={message}\r\n      />}\r\n      <div className='BodyApp'>\r\n        <Form\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        setMessage={setMessage}\r\n        />\r\n        <Phonebook\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        setMessage={setMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}